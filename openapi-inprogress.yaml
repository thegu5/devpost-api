openapi: '3.1.0'
info:
  version: 0.1.0
  title: Devpost API
  description: In Development!
  license: 
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://devpost.gu5.org
security: []
paths:
  /software/{software}:
    get:
      summary: /software/{software}
      operationId: getSoftware
      description: This route won't automatically grab usernames of people who've liked the project or all of its updates - use the /software/{software}/likes and /software/{software}/updates routes for that.
      parameters:
        - $ref: "#/components/parameters/Software"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The software's name
                    minLength: 1
                    maxLength: 60
                  tagline:
                    type: string
                    description: A short description of the software
                    minLength: 1
                    maxLength: 200
                  description:
                    type: string
                    description: The software's description
                    minLength: 1
                  createdAt:
                    type: string
                    description: The software's creation date
                    format: date-time
                  slug:
                    type: string
                    description: The software's URI slug
                  members:
                    type: array
                    description: Array of software member objects
                    items:
                      allOf: 
                        -  $ref: "#/components/schemas/UserCard"
                        -  properties:
                            contributions:
                              type: string
                              description: The member's contributions to the software
                              maxLength: 140
                  tags:
                    type: array
                    description: Array of tag strings
                    items:
                      type: string
                      minLength: 1
                  links:
                    type: array
                    description: An array of link URLs
                    items: 
                      type: string
                      minLength: 1
                      maxLength: 255
                  hackathons:
                    type: array
                    description: Array of hackathon submissions
                    items:
                      allOf: 
                        -  $ref: "#/components/schemas/HackathonCard"
                        - properties: 
                            prizes:
                              type: [array, 'null']
                              description: Array of prizes
                              items:
                                type: string
                  video:
                    type: [string, 'null']
                    description: The software's video URL
                  carousel:
                    type: [array, 'null']
                    description: Array of carousel item data
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          description: The carousel image's URL
                        caption:
                          type: [string, 'null']
                          description: The carousel image's caption
                          maxLength: 140
                  # updates: TODO
                  stats:
                    type: object
                    description: Software statistics
                    properties:
                      likes:
                        type: integer
                        description: Number of likes
                        minimum: 0
                      comments:
                        type: integer
                        description: Number of comments
                        minimum: 0
                      updates:
                        type: integer
                        description: Number of updates
                        minimum: 0
        "404":
          $ref: "#/components/responses/NotFound"
  /software/{software}/likes:
    get:
      summary: /software/{software}/likes
      operationId: getSoftwareLikes
      description: Gets a list of users who've liked a software.
      parameters: 
        - $ref: "#/components/parameters/Software"
      responses:
        "200":
          description: Successful response
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserCard"
        "404":
          $ref: "#/components/responses/NotFound"
  /user/{user}: 
    get:
      summary: /user/{user}
      operationId: getUser
      description: Gets information about a user. Follows software pagination, and can get software hidden from their profile.
      parameters:
        - $ref: "#/components/parameters/User"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties: 
                  name:
                    type: string
                    description: The user's full name
                    minLength: 3
                    maxLength: 81
                  bio:
                    type: [string, 'null']
                    description: The user's bio
                    maxLength: 140
                  avatar:
                    type: string
                    description: A link to the user's avatar (can be a github/other platform cdn)
                  external:
                    type: object
                    description: External links + user-specified location.
                    properties: 
                      location:
                        type: [string, 'null']
                        description: The user's location
                      website:
                        type: [string, 'null']
                        description: The user's website URL
                      github:
                        type: [string, 'null']
                        description: The user's GitHub profile URL
                      twitter:
                        type: [string, 'null']
                        description: The user's Twitter profile URL
                      linkedin:
                        type: [string, 'null']
                        description: The user's LinkedIn profile URL
                  skills:
                    type: [array, 'null']
                    description: Array of skills
                    items:
                      type: string
                      minimum: 1
                  interests:
                    type: [array, 'null']
                    description: Array of interests
                    items:
                      type: string
                      enum: 
                        - "AR/VR"
                        - "Communication"
                        - "Design"
                        - "Education"
                        - "Gaming"
                        - "Lifehacks"
                        - "Mobile"
                        - "Productivity"
                        - "Social Good"
                        - "Beginner Friendly"
                        - "Cybersecurity"
                        - "DevOps"
                        - "Enterprise"
                        - "Health"
                        - "Low/No Code"
                        - "Music/Art"
                        - "Quantum"
                        - "Voice skills"
                        - "Blockchain"
                        - "Databases"
                        - "E-commerce/Retail"
                        - "Fintech"
                        - "IoT"
                        - "Machine Learning/AI"
                        - "Open Ended"
                        - "Robotic Process Automation"
                        - "Web"
                  stats:
                    type: object
                    description: User statistics for various categories
                    properties: 
                      projects:
                        type: integer
                        description: Number of projects
                        minimum: 0
                      hackathons:
                        type: integer
                        description: Number of hackathons
                        minimum: 0
                      achievements:
                        type: integer
                        description: Number of achievements
                        minimum: 0
                      followers:
                        type: integer
                        description: Number of followers
                        minimum: 0
                      following:
                        type: integer
                        description: Number of people the user is following
                        minimum: 0
                      likes:
                        type: integer
                        description: Number of projects the user has liked
                        minimum: 0
                  projects:
                      type: [array, 'null']
                      items: 
                        $ref: "#/components/schemas/ProjectCard"
                  
        "404":
          $ref: "#/components/responses/NotFound"
  /user/{user}/challenges:
    get: 
      summary: /user/{user}/challenges
      operationId: getUserHackathons
      description: Gets a list of hackathons a user has participated in and the project's status. Endpoint is 'challenges' to follow Devpost's urls.
      parameters: 
        - $ref: "#/components/parameters/User"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema: 
                type: array
                items:
                  allOf: 
                    -  $ref: "#/components/schemas/HackathonCard"
                    -  properties: 
                        featured:
                          type: boolean
                          description: Whether the hackathon is featured
                        status:
                          type: [string, 'null']
                          description: The project's status
                          enum: 
                            - null # no project
                            - "Draft"
                            - "Submitted"
                            - "Winner"
        "404":
          $ref: "#/components/responses/NotFound"

components: 
  responses: 
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error message
  parameters:
    User:
      name: user
      in: path
      description: The user's username
      required: true
      schema:
        type: string
    Software:
      name: software
      in: path
      description: The software's URI slug
      required: true
      schema:
        type: string
  schemas:
    UserCard:
      type: object
      description: Short user information provided outside of the user's profile
      properties:
        name:
          type: string
          description: The member's name
        username:
          type: [string, 'null']
          description: The member's username
        url:
          type: [string, 'null']
          description: The member's profile URL
        avatar:
          type: string
          description: The member's avatar URL
    HackathonCard:
      type: object
      description: Short hackathon information
      properties:
        name:
          type: string
          description: The hackathon's name
        slug:
          type: string
          description: The hackathon's URL slug (subdomain!)
        url:
          type: string
          description: The hackathon's URL
        thumbnail:
          type: string
          description: The hackathon's thumbnail URL
    ProjectCard:
      type: object
      properties: 
        name:
          type: string
          description: The project's name
        tagline:
          type: string
          description: The project's tagline
        photo:
          type: string
          description: The project's thumbnail URL
        slug:
          type: string
          description: The project's URL slug
        url:
          type: string
          description: The project's URL
        members:
          type: array
          items: 
            $ref: "#/components/schemas/UserCard"
        like_count:
          type: integer
          description: Number of likes
          minimum: 0
        comment_count:
          type: integer
          description: Number of comments
          minimum: 0
        winner:
          type: boolean
          description: Whether the project won a hackathon or not